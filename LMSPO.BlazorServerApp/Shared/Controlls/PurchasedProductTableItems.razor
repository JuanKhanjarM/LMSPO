@inject IPurchasedProdutsWS _IPurchasedProdutsWS
<table class="table shadow-sm tableRowFont">
    <tbody>
        @if (PurchasedProductDtos != null)
        {
            @foreach (var purchasedProductDto in PurchasedProductDtos)
            {
                <tr>
                    <td class="col-sm-4">@purchasedProductDto.ProductName</td>
                    <td class="col-sm-3 fw-bold">@purchasedProductDto.ProductPrice</td>
                    <td class="col-sm-3 fw-bold">@purchasedProductDto.PurchasedQty</td>
                </tr>
            }
        }
        else
        {
            <p>No Products...</p>
        }
        
    </tbody>
</table>

@code {
    [Parameter]
    public int customerId { get; set; } 
    [Parameter]
    public IEnumerable<PurchasedProductVM> PurchasedProductDtos { get; set; } = new List<PurchasedProductVM>();
    protected override async Task  OnParametersSetAsync()
    {
        PurchasedProductDtos = await _IPurchasedProdutsWS.GetPurchasedProductAsync($"PurchasedProducts/{customerId}");
    }
}
